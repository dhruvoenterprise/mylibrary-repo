name: Build and Upload to JFrog

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest
    env:
      JFROG_USER: ${{ secrets.JFROG_USER }}
      JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      JFROG_URL: https://trial9xcizh.jfrog.io/artifactory
      JFROG_REPO: myrepo-generic-local

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.x'

      - name: Restore dependencies
        run: dotnet restore ./MyLibrary/MyLibrary.csproj

      - name: Build and publish DLLs
        run: dotnet publish ./MyLibrary/MyLibrary.csproj -c Release -o output

      - name: Zip DLLs with version
        shell: pwsh
        run: |
          $runNumber = $env:GITHUB_RUN_NUMBER
          $shortSha = "${{ github.sha }}"[0..6] -join ''
          $version = "app_package_build${runNumber}_$shortSha.zip"
          Compress-Archive -Path output/* -DestinationPath $version
          "ZIP_NAME=$version" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: List ZIP files
        run: dir *.zip

      - name: Install JFrog CLI
        run: choco install jfrog-cli -y

      - name: Configure JFrog CLI
        shell: pwsh
        run: |
          jfrog config add ci-server `
            --url "$env:JFROG_URL" `
            --user "$env:JFROG_USER" `
            --password "$env:JFROG_PASSWORD" `
            --interactive=false

      - name: Upload ZIP to JFrog
        shell: pwsh
        run: |
          $zipName = $env:ZIP_NAME
          if (Test-Path $zipName) {
            Write-Host "Uploading $zipName to $env:JFROG_REPO"
            jfrog rt u $zipName "$env:JFROG_REPO/"
          } else {
            Write-Error "ZIP file not found."
            exit 1
          }
